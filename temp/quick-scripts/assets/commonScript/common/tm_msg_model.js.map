{"version":3,"sources":["tm_msg_model.js"],"names":["tm","window","MsgModel","cc","Class","extends","require","properties","_modelMgr","ctor","arguments","_triggerKey","isAsync","_isRequestIng","_callbacks","_notifierCenter","register","Event","EVT_NET_WEB_SOCKET_DISCONNECT","reset","destroy","LOGD","model_name","resetResponseCb","length","request","params","handler","owner","bHaveCb","push","onResponse","result","_showErrorCode","data","parse","forEach","info","callback","call","Result","code","socketErrorCode","showHit","status"],"mappings":"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","file":"tm_msg_model.js","sourceRoot":"../../../../../assets/commonScript/common","sourcesContent":["/**\n * 内容: 网络协议model\n */\n\ntm.window = tm.window || {};\n\ntm.MsgModel = cc.Class({\n\n    extends:require(\"./tm_base_model\"),\n\n    properties:{\n        _modelMgr: null,\n    },\n\n    ctor:function () {\n        this._modelMgr = arguments[2];\n        this._triggerKey = arguments[3];\n\n        this.isAsync = true;\n        this._isRequestIng = false;\n        this._callbacks = [];\n\n        if(this._notifierCenter) {\n            this._notifierCenter.register(tm.Event.EVT_NET_WEB_SOCKET_DISCONNECT, this.reset, this);\n        }\n    },\n\n    destroy:function () {\n        this._modelMgr = null;\n        this._triggerKey = null;\n    },\n\n\n    reset:function () {\n        tm.LOGD(\"tm.MsgModel\", \"网络错误重置Model请求状态：\", this.model_name);\n        this._isRequestIng = false;\n        this._callbacks = [];\n        this.isAsync = true;\n    },\n\n\n    resetResponseCb:function(){\n        this._callbacks.length = 0;\n    },\n\n    request: function (params, handler, owner) {\n        if(!this.isAsync){\n            return;\n        }\n        //有人请求了,只需要在回调中触发\n        let bHaveCb = false;\n        if(handler){\n            this._callbacks.push(\n                {\n                    'cb':handler,\n                    'owner': owner\n                }\n            );\n            bHaveCb = true;\n        }\n\n        if(this._isRequestIng && bHaveCb){\n            return;\n        }\n\n        this._isRequestIng = true;\n\n        this._modelMgr.request(this.model_name, params);\n    },\n\n    onResponse: function (result) {\n        this._showErrorCode(result);\n\n        this.data = result;\n        this._isRequestIng = false;\n\n        this.parse(result);\n\n        this._callbacks.forEach(function (info) {\n            let callback = info['cb'];\n            if(callback){\n                callback.call(info['owner'] || this, result);\n            }\n        },this);\n\n        this.resetResponseCb();\n\n        if(this._modelMgr) {\n            this._modelMgr.onResponse.call(this._modelMgr, this.data, this.model_name);\n        }\n    },\n\n    /**\n     *  显示错误码\n     * @private\n     */\n    _showErrorCode: function (data) {\n        if(data && data.Result && data.Result.code) {\n            tm.socketErrorCode.showHit(data.Result.code);\n        }\n\n        if(data && data.status) {\n            tm.socketErrorCode.showHit(data.status);\n        }\n\n    },\n});\n"]}