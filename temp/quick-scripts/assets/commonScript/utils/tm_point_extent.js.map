{"version":3,"sources":["tm_point_extent.js"],"names":["window","tm","pointExt","ZERO","cc","v2","_outV","pAdd","v1","out","x","y","pSub","pMult","point","floatVar","pMidpoint","pDot","pCross","pPerp","pRPerp","pProject","pLengthSQ","v","pLength","Math","sqrt","pDistance","pNormalize","n","pForAngle","a","cos","sin","pToAngle","atan2","Angle2Radian","angle","PI"],"mappings":"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","file":"tm_point_extent.js","sourceRoot":"../../../../../assets/commonScript/utils","sourcesContent":["\n\nwindow.tm = tm || {};\n\ntm.pointExt = {\n    ZERO: cc.v2(0.0, 0.0),\n    _outV: cc.v2(0.0, 0.0),\n};\n\ntm.pointExt.pAdd = function (v1, v2, out) {\n    if (!out) {\n        return cc.v2(v1.x + v2.x, v1.y + v2.y);\n    }\n\n    out.x = v1.x + v2.x;\n    out.y = v1.y + v2.y;\n    return out;\n};\n\ntm.pointExt.pSub = function (v1, v2, out) {\n    if (!out) {\n        return cc.v2(v1.x - v2.x, v1.y - v2.y);\n    }\n    out.x = v1.x - v2.x;\n    out.y = v1.y - v2.y;\n    return out;\n};\n\ntm.pointExt.pMult = function (point, floatVar, out) {\n    if (!out) {\n        return cc.v2(point.x * floatVar, point.y * floatVar);\n    }\n    out.x = point.x * floatVar;\n    out.y = point.y * floatVar;\n    return out;\n};\n\ntm.pointExt.pMidpoint = function (v1, v2, out) {\n    if (!out) {\n        return cc.pMult(cc.pAdd(v1, v2), 0.5);\n    }\n    tm.pointExt.pAdd(v1, v2, out);\n    tm.pointExt.pMult(out, 0.5, out);\n    return out;\n};\n\ntm.pointExt.pDot = function (v1, v2) {\n    return v1.x * v2.x + v1.y * v2.y;\n};\n\ntm.pointExt.pCross = function (v1, v2) {\n    return v1.x * v2.y - v1.y * v2.x;\n};\n\n// 返回逆时针旋转 90 度后的新向量\ntm.pointExt.pPerp = function (point, out) {\n    if (!out) {\n        return cc.v2(-point.y, point.x);\n    }\n    out.x = -point.y;\n    out.y = point.x;\n    return out;\n};\n\n//将指定向量顺时针旋转 90 度并返回。\ntm.pointExt.pRPerp = function (point, out) {\n    if (!out) {\n        return cc.v2(point.y, -point.x);\n    }\n    out.x = point.y;\n    out.y = -point.x;\n    return out;\n};\n\n//返回 v1 在 v2 上的投影向量。\ntm.pointExt.pProject = function (v1, v2, out) {\n    if (!out) {\n        return cc.pMult(v2, cc.pDot(v1, v2) / cc.pDot(v2, v2));\n    }\n\n    tm.pointExt.pMult(v2, tm.pointExt.pDot(v1, v2) / tm.pointExt.pDot(v2, v2), out);\n\n    return out;\n};\n\n//返回指定向量长度的平方。\ntm.pointExt.pLengthSQ = function (v) {\n    return tm.pointExt.pDot(v, v);\n};\n\n// 返回指定向量的长度\ntm.pointExt.pLength = function (v) {\n    return Math.sqrt(tm.pointExt.pLengthSQ(v));\n};\n\n// 2个向量之间的距离\ntm.pointExt.pDistance = function (v1, v2) {\n    return tm.pointExt.pLength(tm.pointExt.pSub(v1, v2, this._outV));\n};\n\n//返回一个长度为 1 的标准化过后的向量\ntm.pointExt.pNormalize = function (v, out) {\n    let n = tm.pointExt.pLength(v);\n\n    if (!out) {\n        return n === 0 ? cc.v2(v) : cc.pMult(v, 1.0 / n);\n    }\n\n    if (n === 0) {\n        out.x = v.x;\n        out.y = v.y;\n\n    } else {\n        tm.pointExt.pMult(v, 1.0 / n, out);\n    }\n\n    return out;\n};\n\n// 将弧度转换为一个标准化后的向量，返回坐标 x = cos(a) , y = sin(a)。\ntm.pointExt.pForAngle = function (a, out) {\n    if (!out) {\n        return cc.v2(Math.cos(a), Math.sin(a));\n    }\n    out.x = Math.cos(a);\n    out.y = Math.sin(a);\n    return out;\n};\n\n//返回指定向量的弧度。\ntm.pointExt.pToAngle = function (v) {\n    return Math.atan2(v.y, v.x);\n};\n\n// 度数转换成弧度\ntm.pointExt.Angle2Radian = function (angle) {\n    return (Math.PI/180) * angle;\n};"]}