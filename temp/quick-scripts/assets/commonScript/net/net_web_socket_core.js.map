{"version":3,"sources":["net_web_socket_core.js"],"names":["NetState","DEFAULT","CONNECTED","ERROR","tm","NetSocketCore","cc","Class","extends","Component","properties","_TAG","_sioClient","_bGameShow","_gameHideTime","_dispatchMap","_netState","_hbInterval","_host","_post","ctor","_delayTime","init","registerEvent","onDestroy","notifierCenter","register","Event","EVT_SYS_GAME_HIDE","onGameHide","EVT_SYS_GAME_SHOW","onGameShow","netChange","state","getNetState","registerNetDispatch","gameId","notifier","removeNetDispatch","LOGD","Date","getTime","setHBInterval","time","linkServer","host","post","connected","disconnect","LOGE","prop","onConnect","onError","onClose","onReconnect","tag","e","trigger","APP_CATCH","EVT_NET_WEB_SOCKET_CONNECT","msg","__rconnect","EVT_NET_WEB_SOCKET_DISCONNECT","EVT_NET_WEB_SOCKET_RECT_BEGIN","getDelayTime","send","protocol","sio","EVT_NET_WEB_SOCKET_UNINIT","topic","cmd","params","msg_json","JSON","stringify","request","EVT_NET_WEB_SOCKET_UNCONNECT","on","callback","context"],"mappings":"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","file":"net_web_socket_core.js","sourceRoot":"../../../../../assets/commonScript/net","sourcesContent":["/**\n *\n * 注意: 标记为Ref的对象为引用对象, 不要在这个类改变属性.\n *\n * 内容:\n * socket\n *\n * 例子：\n *  tm.netSocketIo.linkServer(host);\n */\n\nconst NetState = {\n    DEFAULT:-1,//默认状态，开没开始链接\n    CONNECTED:1,//链接成功\n    ERROR:2//链接错误\n};\n\ntm.NetSocketCore = cc.Class({\n    extends:cc.Component,\n\n    properties:{\n        _TAG: \"MainNetSocket\",\n        _sioClient:null,\n        _bGameShow:true,\n        _gameHideTime: -1,\n        _dispatchMap:null,\n        _netState:NetState.DEFAULT,\n        _hbInterval: 3,\n\n        _host: null,\n        _post: null,\n    },\n\n    ctor:function(){\n        this._dispatchMap = {};\n        this._delayTime = 100;//默认100ms\n\n\n        this.init();\n    },\n\n    init:function(){\n        this.registerEvent();\n    },\n\n    onDestroy:function(){\n        this._sioClient = null;\n\n        this._dispatchMap = null;\n    },\n\n    registerEvent:function () {\n        tm.notifierCenter.register(tm.Event.EVT_SYS_GAME_HIDE, this.onGameHide, this);\n        tm.notifierCenter.register(tm.Event.EVT_SYS_GAME_SHOW, this.onGameShow, this);\n    },\n\n    netChange:function (state) {\n        this._netState = state;\n    },\n\n    getNetState:function () {\n        return this._netState;\n    },\n\n    registerNetDispatch:function (gameId, notifier) {\n        this._dispatchMap[gameId] = notifier;\n    },\n\n    removeNetDispatch:function (gameId) {\n        if(this._dispatchMap[gameId]){\n            delete  this._dispatchMap[gameId];\n        }\n\n        tm.LOGD(\"tm.NetSocketCore removeNetDispatch \", \"gameId\", gameId);\n    },\n    /**\n     * app切入前台\n     */\n    onGameShow:function(){\n        this._bGameShow = true;\n    },\n\n    /**\n     * app切入后台\n     */\n    onGameHide:function(){\n        this._bGameShow = false;\n        this._gameHideTime = new Date().getTime();\n    },\n\n    setHBInterval:function (time) {\n        this._hbInterval = time || 3;\n    },\n\n    linkServer:function(host, post){\n        if(!host){\n            return;\n        }\n\n        try {\n            if(this._sioClient.connected) {\n                this._sioClient.disconnect();\n                this._sioClient.connected = false;\n            }\n\n            tm.LOGD(\"tm.NetSocketCore host \", host);\n            tm.LOGD(\"tm.NetSocketCore post \", post);\n\n            if (typeof  this._sioClient  === 'undefined') {\n                tm.LOGE(\"tm.NetSocketCore \", 'You should new mqlib first !');\n                return;\n            }\n\n            this._host = host;\n            this._post = post;\n\n            let prop = {\n                \"connect\": this.onConnect,\n                \"error\": this.onError,\n                \"close\": this.onClose,\n                \"reconnect\": this.onReconnect,\n                \"useSSL\": false,\n                \"host\": host,\n                \"port\": post\n            };\n\n            this._sioClient.init(prop, this);\n            this._sioClient.tag = this._TAG;\n        } catch(e) {\n            tm.notifierCenter.trigger(tm.Event.APP_CATCH, e);\n        }\n    },\n\n    onConnect: function() {\n        tm.LOGD(this._TAG, \"链接成功\");\n\n        this.netChange(NetState.CONNECTED);\n\n        //native 需要手动标记\n        this._sioClient.connected = true;\n\n        tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_CONNECT);\n    },\n\n\n    /**\n     * Fired when an error occurs.\n     * 发生错误\n     */\n    onError:function (msg) {\n        tm.LOGD(this._TAG, \"onError\", msg);\n        this.netChange(NetState.ERROR);\n    },\n\n    /**\n     * 触发关闭\n     */\n    onClose: function () {\n        tm.LOGD(this._TAG, \"onClose\");\n        this.netChange(NetState.ERROR);\n    },\n\n    __rconnect(){\n        tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_DISCONNECT);\n        //开始重连\n        tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_RECT_BEGIN);\n\n        this.linkServer(this._host, this._post);\n    },\n    /**\n     * 成功的重连\n     * Fired upon a successful reconnection.\n     */\n    onReconnect:function () {\n        tm.LOGD(this._TAG, \"onReconnect\");\n        this.netChange(NetState.CONNECTED);\n        tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_CONNECT);\n    },\n\n    getDelayTime(){\n        return this._delayTime;\n    },\n\n    /**\n     * 发送消息\n     * @param protocol\n     * @param callback\n     * @param context\n     */\n    send:function (protocol){\n        let sio = this._sioClient;\n        if(!sio){\n            tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_UNINIT);\n            return;\n        }\n\n        if(sio.connected){\n            let topic = protocol.cmd;\n            let params = protocol.params;\n            let msg_json = JSON.stringify(params);\n\n            tm.LOGD(\"Send topic: \", topic, \" msg: \",  msg_json);\n\n            sio.request(topic, params);\n        } else {\n            tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_UNCONNECT);\n        }\n    },\n\n    /**\n     * 监听消息\n     * @param callback\n     * @param context\n     */\n    on:function (topic, callback, context) {\n        let sio = this._sioClient;\n        if(!sio){\n            tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_UNINIT);\n            return;\n        }\n\n        if(sio.connected){\n           // tm.LOGD(\"on topic: \", topic);\n\n            sio.on(topic, callback, context);\n        } else {\n            tm.notifierCenter.trigger(tm.Event.EVT_NET_WEB_SOCKET_UNCONNECT);\n        }\n    }\n});"]}