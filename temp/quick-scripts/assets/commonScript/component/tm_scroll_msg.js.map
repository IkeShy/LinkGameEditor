{"version":3,"sources":["tm_scroll_msg.js"],"names":["cc","Class","extends","Component","properties","maskNode","Node","strLabel","Label","_m_startPos","v2","_m_infoList","_m_isRunning","onLoad","_initData","_initListen","tm","notifierCenter","register","Event","EVT_SHOW_COMMON_SCROLL_MSG","_showScrollMsg","onDestroy","ignoreScope","data","startScrollFunc","node","active","push","_showStrLabel","length","string","shift","_updateRenderData","position","distance","width","duration","moveBy","callBack","callFunc","seq","sequence","runAction"],"mappings":";;;;;;AAAA;;;;AAIAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACAC,kBAAUL,GAAGM,IAFL,EAEW;AACnBC,kBAAUP,GAAGQ,KAHL,EAGY;;AAEpB;AACAC,qBAAaT,GAAGU,EAAH,CAAM,CAAN,EAAS,CAAT,CANL,EAMkB;AAC1BC,qBAAa,EAPL,EAOS;AACjBC,sBAAc;AARN,KAHP;;AAcLC,UAdK,oBAcK;AACN,aAAKC,SAAL;AACA,aAAKC,WAAL;AACH,KAjBI;;;AAmBL;;;;AAIAA,eAvBK,yBAuBU;AACXC,WAAGC,cAAH,CAAkBC,QAAlB,CAA2BF,GAAGG,KAAH,CAASC,0BAApC,EAAgE,KAAKC,cAArE,EAAqF,IAArF;AACH,KAzBI;AA2BLC,aA3BK,uBA2BQ;AACTN,WAAGC,cAAH,CAAkBM,WAAlB,CAA8B,IAA9B;AACH,KA7BI;;;AA+BL;;;AAGAF,kBAlCK,0BAkCWG,IAlCX,EAkCiB;AAClB,aAAKC,eAAL,CAAqBD,IAArB;AACH,KApCI;AAsCLV,aAtCK,uBAsCQ;AACT,aAAKF,YAAL,GAAoB,KAApB;AACA,aAAKH,WAAL,GAAmBT,GAAGU,EAAH,CAAM,EAAN,EAAU,CAAV,CAAnB;AACH,KAzCI;;;AA2CL;;;AAGAe,mBA9CK,2BA8CYD,IA9CZ,EA8CkB;AACnB,YAAGA,QAAQ,IAAX,EAAiB;AACb;AACH;;AAED,aAAKE,IAAL,CAAUC,MAAV,GAAmB,IAAnB;AACA,aAAKhB,WAAL,CAAiBiB,IAAjB,CAAsBJ,IAAtB;AACA,aAAKK,aAAL;AACH,KAtDI;;;AAwDL;;;;AAIAA,iBA5DK,2BA4DY;AACb,YAAG,KAAKjB,YAAR,EAAsB;AAClB;AACH;;AAED,YAAG,KAAKD,WAAL,CAAiBmB,MAAjB,GAA0B,CAA7B,EAAgC;AAC5B,iBAAKlB,YAAL,GAAoB,IAApB;AACA,iBAAKL,QAAL,CAAcwB,MAAd,GAAuB,KAAKpB,WAAL,CAAiBqB,KAAjB,EAAvB;AACA;AACA,iBAAKzB,QAAL,CAAc0B,iBAAd,CAAgC,IAAhC;AACA,iBAAK1B,QAAL,CAAcmB,IAAd,CAAmBQ,QAAnB,GAA8B,KAAKzB,WAAnC;;AAEA,gBAAI0B,WAAW,KAAK5B,QAAL,CAAcmB,IAAd,CAAmBU,KAAnB,GAA4B,KAAK/B,QAAL,CAAc+B,KAAd,GAAsB,CAAjE;AACA,gBAAIC,WAAWF,WAAW,GAA1B;;AAEA,gBAAIG,SAAStC,GAAGsC,MAAH,CAAUD,QAAV,EAAoBrC,GAAGU,EAAH,CAAM,CAACyB,QAAP,EAAiB,CAAjB,CAApB,CAAb;AACA,gBAAII,WAAYvC,GAAGwC,QAAH,CAAY,YAAU;AAClC,qBAAK5B,YAAL,GAAoB,KAApB;AACA,qBAAKL,QAAL,CAAcwB,MAAd,GAAuB,EAAvB;AACA,qBAAKxB,QAAL,CAAcmB,IAAd,CAAmBQ,QAAnB,GAA8B,KAAKzB,WAAnC;AACA,qBAAKoB,aAAL;AACH,aALe,EAKb,IALa,CAAhB;;AAOA,gBAAIY,MAAMzC,GAAG0C,QAAH,CAAYJ,MAAZ,EAAoBC,QAApB,CAAV;AACA,iBAAKhC,QAAL,CAAcmB,IAAd,CAAmBiB,SAAnB,CAA6BF,GAA7B;AACH,SApBD,MAoBO;AACH,iBAAKf,IAAL,CAAUC,MAAV,GAAmB,KAAnB;AACH;AACJ;AAxFI,CAAT","file":"tm_scroll_msg.js","sourceRoot":"../../../../../assets/commonScript/component","sourcesContent":["/**\n * 大厅元素 -- 跑马灯\n * tm.notifierCenter.trigger(tm.Event.EVT_SHOW_COMMON_SCROLL_MSG, {\"msg\": \"我是跑马灯\"});\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // creator\n        maskNode: cc.Node, // 裁切层\n        strLabel: cc.Label, // 显示的字符串\n\n        // 变量\n        _m_startPos: cc.v2(0, 0), // 字符串移动坐标\n        _m_infoList: [], // 数据列表\n        _m_isRunning: false,\n    },\n\n    onLoad () {\n        this._initData();\n        this._initListen();\n    },\n\n    /**\n     * 注册监听\n     * @private\n     */\n    _initListen () {\n        tm.notifierCenter.register(tm.Event.EVT_SHOW_COMMON_SCROLL_MSG, this._showScrollMsg, this);\n    },\n\n    onDestroy () {\n        tm.notifierCenter.ignoreScope(this);\n    },\n\n    /*\n     * 显示跑马灯消息\n     */\n    _showScrollMsg (data) {\n        this.startScrollFunc(data);\n    },\n\n    _initData () {\n        this._m_isRunning = false;\n        this._m_startPos = cc.v2(20, 0);\n    },\n\n    /**\n     * 开始播放循环\n     */\n    startScrollFunc (data) {\n        if(data == null) {\n            return\n        }\n\n        this.node.active = true;\n        this._m_infoList.push(data);\n        this._showStrLabel();\n    },\n\n    /**\n     * 显示字符串\n     * @private\n     */\n    _showStrLabel () {\n        if(this._m_isRunning) {\n            return;\n        }\n\n        if(this._m_infoList.length > 0) {\n            this._m_isRunning = true;\n            this.strLabel.string = this._m_infoList.shift();\n            //需要先更新标签的宽度，不然下一帧才更新，这里取到的值就会是原来的值，导致宽度计算错误\n            this.strLabel._updateRenderData(true)\n            this.strLabel.node.position = this._m_startPos;\n\n            let distance = this.strLabel.node.width + (this.maskNode.width / 2);\n            let duration = distance / 100;\n\n            let moveBy = cc.moveBy(duration, cc.v2(-distance, 0));\n            let callBack =  cc.callFunc(function(){\n                this._m_isRunning = false;\n                this.strLabel.string = \"\"\n                this.strLabel.node.position = this._m_startPos;\n                this._showStrLabel();\n            }, this);\n\n            let seq = cc.sequence(moveBy, callBack);\n            this.strLabel.node.runAction(seq)\n        } else {\n            this.node.active = false;\n        }\n    },\n\n});\n"]}