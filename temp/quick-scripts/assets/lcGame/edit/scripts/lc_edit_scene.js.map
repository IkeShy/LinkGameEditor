{"version":3,"sources":["lc_edit_scene.js"],"names":["cc","Class","extends","tm","BaseScene","properties","m_raw","m_col","gameAreaBg","Node","mapNode","containerNode","mapEleUIPrefab","Prefab","containerPrefab","_curMap","_mapList","_containerList","onLoad","_super","_startX","getContentSize","width","_startY","height","_registerListen","_addMapEleUi","_initMap","mapInfo","game","mapMgr","getDefaultMap","oneWidth","oneHeight","i","length","oneRow","j","x","y","oneMap","createMapByType","lc","GameType","ItemType","Map","mLogic","getComponent","setPos","v2","addChild","oneContainer","instantiate","mContainer","mapEleUI","ui_parent","register","Event","Edit","ChooseMap","onChooseMap","IsOpenMap","onIsOpenMap","ShowMapBound","onMapBound","ChooseSweets","onChooseSweets","ChooseHinder","onChooseHinder","info","trigger","ShowMapEle","flag","logic","onMapOpen","type","onShowMapBound","mapLogic","container","logicX","logicY","cLogic","addItemByType","onDownLoad","oneMapRow","oneContainerRow","oneInfo","isOpen","isMapOpen","map","getShowMapBound","getItemList","file","File","JSON","stringify","window","saveAs"],"mappings":"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","file":"lc_edit_scene.js","sourceRoot":"../../../../../../assets/lcGame/edit/scripts","sourcesContent":["/**\n * 游戏编辑器\n */\ncc.Class({\n    extends: tm.BaseScene,\n\n    properties: {\n        m_raw: 8, // 行\n        m_col: 8, // 列\n\n        gameAreaBg: cc.Node, // 背景\n        mapNode: cc.Node, // map的节点\n        containerNode: cc.Node, // 容器的节点\n\n        mapEleUIPrefab: cc.Prefab, // 地图元素ui\n        containerPrefab: cc.Prefab, // 容器原型\n\n        _curMap: null, // 当前选择的地图块\n        _mapList: null, // 地图列表\n        _containerList: null, // 容器列表\n    },\n\n    onLoad () {\n        this._super();\n        this._startX = -this.gameAreaBg.getContentSize().width / 2;\n        this._startY = -this.gameAreaBg.getContentSize().height / 2;\n        this._registerListen();\n        this._addMapEleUi();\n\n        this._initMap();\n    },\n\n    /**\n     * 初始化地图\n     * 容器也在这时候初始化\n     * @private\n     */\n    _initMap () {\n        let mapInfo  = this.game.mapMgr.getDefaultMap();\n        if(mapInfo) {\n            let oneWidth  = 81;\n            let oneHeight = 81;\n            this._mapList = [];\n            this._containerList = [];\n\n            for (let i = 0; i < mapInfo.length; i++) {\n                let oneRow = mapInfo[i];\n                this._mapList[i] = [];\n                this._containerList[i] = [];\n\n                for (let j = 0; j < oneRow.length; j++) {\n                    let x = this._startX + oneWidth / 2 + oneWidth * i;\n                    let y = this._startY + oneHeight * j;\n\n                    // 地图\n                    let oneMap = this.game.mapMgr.createMapByType(lc.GameType.ItemType.Map);\n                    let mLogic = oneMap.getComponent('lc_game_map');\n                    mLogic.setPos(cc.v2(x, y), i ,j);\n                    this._mapList[i][j] = oneMap;\n                    this.gameAreaBg.addChild(oneMap);\n\n\n                    // 容器\n                    let oneContainer = cc.instantiate(this.containerPrefab);\n                    let mContainer = oneContainer.getComponent('lc_game_container');\n                    mContainer.setPos(cc.v2(x, y), i ,j);\n                    this._containerList[i][j] = mContainer;\n                    this.gameAreaBg.addChild(oneContainer);\n                }\n            }\n        }\n    },\n\n    /**\n     * 添加地图元素ui\n     * @private\n     */\n    _addMapEleUi () {\n        let mapEleUI = cc.instantiate(this.mapEleUIPrefab);\n        this.ui_parent.addChild(mapEleUI);\n    },\n\n    _registerListen () {\n        this.register(lc.Event.Edit.ChooseMap, this.onChooseMap, this);\n        this.register(lc.Event.Edit.IsOpenMap, this.onIsOpenMap, this);\n        this.register(lc.Event.Edit.ShowMapBound, this.onMapBound, this);\n        this.register(lc.Event.Edit.ChooseSweets, this.onChooseSweets, this);\n        this.register(lc.Event.Edit.ChooseHinder, this.onChooseHinder, this);\n    },\n\n    /**\n     * 选择地图\n     */\n    onChooseMap (info) {\n        let x = info.x;\n        let y = info.y;\n\n        if( x != void 0 && y != void 0) {\n            this._curMap = this._mapList[x][y];\n            this.trigger(lc.Event.Edit.ShowMapEle);\n        }\n    },\n\n    /**\n     * 是否打开地图\n     */\n\n    onIsOpenMap (flag) {\n        if(this._curMap) {\n            let logic = this._curMap.getComponent('lc_game_map');\n            logic.onMapOpen(flag);\n        }\n    },\n\n    /**\n     * 选择地图边框\n     */\n    onMapBound (type) {\n        if(this._curMap) {\n            let logic = this._curMap.getComponent('lc_game_map');\n            logic.onShowMapBound(type);\n        }\n    },\n\n    /**\n     * 选择糖果\n     */\n    onChooseSweets (type) {\n        if(this._curMap && type) {\n            // 通过操作的地图获取到相应容器\n            // 这里不应该报错\n            let mapLogic = this._curMap.getComponent('lc_game_map');\n            let container = this._containerList[mapLogic.logicX][mapLogic.logicY];\n            let cLogic = container.getComponent('lc_game_container');\n            cLogic.addItemByType(type);\n        }\n    },\n\n    /**\n     * 选择障碍物\n     */\n    onChooseHinder (type) {\n        if(this._curMap && type) {\n            // 通过操作的地图获取到相应容器\n            // 这里不应该报错\n            let mapLogic = this._curMap.getComponent('lc_game_map');\n            let container = this._containerList[mapLogic.logicX][mapLogic.logicY];\n            let cLogic = container.getComponent('lc_game_container');\n            cLogic.addItemByType(type);\n        }\n    },\n\n    /**\n     * 下载\n     */\n    onDownLoad () {\n        let mapInfo  = this.game.mapMgr.getDefaultMap();\n        if(mapInfo) {\n            for (let i = 0; i < mapInfo.length; i++) {\n                let oneRow = mapInfo[i];\n                let oneMapRow = this._mapList[i];\n                let oneContainerRow = this._containerList[i];\n\n                for (let j = 0; j < oneRow.length; j++) {\n                    // 处理地图\n                    let oneInfo = oneRow[j];\n\n                    let oneMap = oneMapRow[j];\n                    let mLogic = oneMap.getComponent('lc_game_map');\n                    oneInfo.isOpen = mLogic.isMapOpen();\n                    oneInfo.map.type = mLogic.getShowMapBound();\n\n                    let oneContainer = oneContainerRow[j];\n                    let cLogic = oneContainer.getComponent('lc_game_container');\n                    oneInfo.container =  cLogic.getItemList();\n                }\n            }\n        }\n\n\n\n        let file = new File([JSON.stringify(mapInfo)], \"LevelConfig.json\", { type: \"text/plain;charset=utf-8\" });\n        window.saveAs(file);\n    }\n\n\n});"]}