{"version":3,"sources":["lc_game_map_manage.js"],"names":["window","lc","GameMapMgr","cc","Class","extends","Component","properties","mapList","_row","_cow","init","_initMapList","GameType","ItemType","Map","game","asssetMgr","getPrefabByName","createMapByType","type","map","prefab","instantiate","tm","LOGD","getDefaultMap","i","j","obj","push","slice","onDestroy","notifierCenter","ignoreScope"],"mappings":";;;;;;AAAA;;;;AAIAA,OAAOC,EAAP,GAAYD,OAAOC,EAAP,IAAa,EAAzB;;AAEAA,GAAGC,UAAH,GAAgBC,GAAGC,KAAH,CAAS;;AAErBC,aAAQF,GAAGG,SAFU;;AAIrBC,gBAAa;AACTC,iBAAS,IADA,EACM;;AAEfC,cAAM,CAHG,EAGA;AACTC,cAAM,CAJG,CAIA;AAJA,KAJQ;;AAWrBC,UAAO,gBAAY;AACf,aAAKC,YAAL;AACH,KAboB;;AAerBA,gBAfqB,0BAeL;AACZ,aAAKJ,OAAL,GAAe,EAAf;AACA,aAAKA,OAAL,CAAaP,GAAGY,QAAH,CAAYC,QAAZ,CAAqBC,GAAlC,IAAyCd,GAAGe,IAAH,CAAQC,SAAR,CAAkBC,eAAlB,CAAkC,aAAlC,CAAzC;AACH,KAlBoB;;;AAoBrB;;;;;AAKAC,mBAzBqB,2BAyBJC,IAzBI,EAyBE;AACnB,YAAIC,MAAM,IAAV;AACA,YAAIC,SAAS,KAAKd,OAAL,CAAaY,IAAb,CAAb;;AAEA,YAAGE,MAAH,EAAW;AACPD,kBAAMlB,GAAGoB,WAAH,CAAeD,MAAf,CAAN;AACH,SAFD,MAEO;AACHE,eAAGC,IAAH,CAAQ,IAAR,EAAc,kBAAkBL,IAAhC;AACH;;AAED,eAAOC,GAAP;AACH,KApCoB;;;AAsCrB;;;;;;;;;;;;;;AAcAK,iBApDqB,2BAoDJ;AACb,YAAIL,MAAM,EAAV;AACA,aAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI,KAAKjB,IAAzB,EAA+BiB,GAA/B,EAAoC;AAChCN,gBAAIM,CAAJ,IAAS,EAAT;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,IAAzB,EAA+BmB,GAA/B,EAAoC;AAChC,oBAAIC,MAAM;AACP,8BAAU,IADH;AAEP,2BAAO;AACN,gCAAQ;AADF,qBAFA;AAKP,iCAAa;AALN,iBAAV;;AAQAR,oBAAIM,CAAJ,EAAOG,IAAP,CAAYD,GAAZ;AACH;AACJ;;AAED,eAAOR,IAAIU,KAAJ,CAAU,CAAV,CAAP;AACH,KAtEoB;;;AAwErB;;;AAGAC,aA3EqB,uBA2ER;AACTR,WAAGS,cAAH,CAAkBC,WAAlB,CAA8B,IAA9B;;AAEA,YAAGjC,GAAGe,IAAN,EAAY;AACRf,eAAGe,IAAH,CAAQkB,WAAR,CAAoB,IAApB;AACH;AACJ;AAjFoB,CAAT,CAAhB","file":"lc_game_map_manage.js","sourceRoot":"../../../../../../assets/lcGame/scripts/mgr","sourcesContent":["/**\n * 地图管理器\n * @type {*|{}}\n */\nwindow.lc = window.lc || {};\n\nlc.GameMapMgr = cc.Class({\n\n    extends:cc.Component,\n\n    properties : {\n        mapList: null, // 地图列表\n\n        _row: 8, // 行\n        _cow: 8, // 列\n    },\n\n    init : function () {\n        this._initMapList();\n    },\n\n    _initMapList () {\n        this.mapList = {};\n        this.mapList[lc.GameType.ItemType.Map] = lc.game.asssetMgr.getPrefabByName(\"lc_game_map\");\n    },\n\n    /**\n     * 通过类型创建一个地图\n     * 预留\n     * @param type\n     */\n    createMapByType (type) {\n        let map = null;\n        let prefab = this.mapList[type];\n\n        if(prefab) {\n            map = cc.instantiate(prefab);\n        } else {\n            tm.LOGD(true, \"没有这个地图的prefab\" + type);\n        }\n\n        return map;\n    },\n\n    /**\n     * 获取默认地图\n     * 包括\n     * isOpen -- 地图是否开启\n     *\n     * map = {\n     *     type -- 地图类型，可以有多个，表示边\n     * }\n     *\n     * container = [] 容器里面为存在的元素\n     * 一个格子上面可以有多个东西组成，障碍物可以重复，但是糖果不能。\n     * 每个item 根据自己的属性加入到map的item中\n     *\n     */\n    getDefaultMap () {\n        let map = [];\n        for (let i = 0; i < this._cow; i++) {\n            map[i] = [];\n            for (let j = 0; j < this._row; j++) {\n                let obj = {\n                   'isOpen': true,\n                   'map': {\n                    'type': []\n                   },\n                   'container': []\n                };\n\n                map[i].push(obj);\n            }\n        }\n\n        return map.slice(0);\n    },\n\n    /**\n     * 释放函数\n     */\n    onDestroy () {\n        tm.notifierCenter.ignoreScope(this);\n\n        if(lc.game) {\n            lc.game.ignoreScope(this);\n        }\n    }\n});"]}