{"version":3,"sources":["../../../../../assets/commonScript/mgr/assets/commonScript/mgr/tm_model_mgr.js"],"names":["window","tm","ModelMgr","cc","Class","extends","require","properties","_msgCbs","_notifierCenter","_msgConfig","ctor","gameId","arguments","modelMap","init","msgConfig","notifier","registAllMsgCmd","reloadMsgCmd","msgC","k","prot","cmd","bCache","model","createModel","netSocketIo","on","onResponse","newMsg","moreParams","msg","params","item","getMsgProtocol","key","protocols","JSON","parse","stringify","hasOwnProperty","request","protocolName","protocol","send","listenMsg","handler","scoper","config","triggerKey","register","ignoreMsg","ignore","response","modelName","LOGE","trigger","modelClass","MsgModel","addModel","fgetModel","model_name","hasModel","removeModel","destroy","_super"],"mappings":"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","file":"tm_model_mgr.js","sourceRoot":"../../../../../assets/commonScript/mgr","sourcesContent":["/**\n *\n * 内容: 游戏数据结构管理\n *\n */\n\nwindow.tm = window.tm || {};\n\ntm.ModelMgr = cc.Class({\n\n    extends: require(\"../common/tm_game_wapper\"),\n\n    properties:{\n        _msgCbs:null,\n        _notifierCenter:null,\n        _msgConfig:null,\n    },\n    /**\n     *\n     * @param namesp 对应插件游戏的命名空间\n     */\n    ctor: function () {\n        this.gameId = arguments[0] || 666;\n        this.modelMap = {};\n        this._msgCbs = {};\n    },\n\n    init: function (msgConfig, notifier) {\n        this._msgConfig = msgConfig;\n\n        this._notifierCenter = notifier;\n\n        this.registAllMsgCmd(msgConfig);\n    },\n\n    reloadMsgCmd:function (msgConfig) {\n        this.registAllMsgCmd(msgConfig);\n    },\n\n    registAllMsgCmd:function(msgConfig){\n        let msgC = msgConfig;\n        for (let k in msgC) {\n            let prot = msgC[k];\n            let cmd = prot.cmd;\n            let bCache = prot.bCache;\n\n            if (bCache) {\n                if (!this._msgCbs[k]) {\n                    let model = this._msgCbs[k] = this.createModel(k);\n                    if(model) {\n                        tm.netSocketIo.on(cmd, model.onResponse, model);\n                    }\n                }\n            }\n        }\n    },\n\n    newMsg:function(cmd, moreParams){\n        var msg = {};\n        msg.params = {};\n        msg.cmd = cmd;\n        if (moreParams != null) {\n            for (var item in moreParams) {\n                msg.params[item] = moreParams[item];\n            }\n        }\n        return msg;\n    },\n\n    getMsgProtocol:function(key, moreParams){\n        let protocols = this._msgConfig;\n        let prot = JSON.parse(JSON.stringify(protocols[key]));\n        let cmd = prot.cmd;\n        moreParams = moreParams || {};\n\n        if(prot.params){\n            for (let item in moreParams) {\n                //兼容\n                if(moreParams.hasOwnProperty(item)){\n                    prot.params[item] = moreParams[item];\n                }\n            }\n        }\n\n        let msg = this.newMsg(cmd, prot.params);\n        return msg;\n    },\n\n    /**\n     * 请求\n     * @param protocolName\n     * @param params\n     */\n    request: function (protocolName, params) {\n        let protocol = this.getMsgProtocol(protocolName, params);\n        if(protocol){\n            tm.netSocketIo.send(protocol);\n        }\n    },\n\n    /**\n     * 监听\n     * @param protocolName\n     * @param handler\n     * @param scoper\n     */\n    listenMsg:function (protocolName, handler, scoper) {\n        let config = this._msgConfig[protocolName];\n        let triggerKey = config['triggerKey'] || protocolName + \"_update\";\n\n        this._notifierCenter.register(triggerKey, handler, scoper);\n    },\n\n    ignoreMsg:function (protocolName, handler, scoper) {\n        let config = this._msgConfig[protocolName];\n        let triggerKey = config['triggerKey'] || protocolName + \"_update\";\n\n        this._notifierCenter.ignore(triggerKey, handler, scoper);\n    },\n\n    onResponse: function (response, modelName) {\n        if(!response){\n            tm.LOGE(\"tm.ModelMgr\", \"onResponse response is null\");\n            return;\n        }\n\n        if(!modelName){\n            tm.LOGE(\"tm.ModelMgr\", \"onResponse modelName is null\");\n            return;\n        }\n\n        let config = this._msgConfig[modelName];\n        let triggerKey = config['triggerKey'] || modelName + \"_update\";\n\n        if(response){\n            this._notifierCenter.trigger(triggerKey, response);\n        }\n    },\n\n    createModel:function(modelName){\n        let model = this.modelMap[modelName];\n        if (!model) {\n            let msgConfig = this._msgConfig[modelName];\n            let modelClass = msgConfig['modelClass'] || tm.MsgModel;\n\n            model = new modelClass(modelName, this._notifierCenter, this);\n            this.addModel(model);\n        }\n        return model;\n    },\n\n    fgetModel: function (modelName) {\n        return this.modelMap[modelName];\n    },\n\n    /**\n     * Register a model with the ModelManager\n     * @param {puremvc.model}\n     */\n    addModel: function (model) {\n        this.modelMap[model.model_name] = model;\n    },\n\n    hasModel: function (modelName) {\n        return this.modelMap[modelName] != null;\n    },\n\n    /**\n     * Remove a model from the ModelManager.\n     *\n     * @param {string} modelName\n     *  The name of the model instance to remove\n     * @return {puremvc.model}\n     *  The model that was removed from the ModelManager\n     */\n    removeModel: function (modelName) {\n        var model = this.modelMap[modelName];\n        if (model) {\n\n            if(model.destroy){\n                model.destroy();\n            }\n\n            this.modelMap[modelName] = null;\n        }\n    },\n\n    destroy:function(){\n        for(var k in this.modelMap){\n            this.removeModel(k);\n        }\n        this._msgCbs = null;\n        this.modelMap = null;\n        this._super();\n    }\n});"]}