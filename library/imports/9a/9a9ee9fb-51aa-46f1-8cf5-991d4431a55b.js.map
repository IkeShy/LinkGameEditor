{"version":3,"sources":["../../../../../../../assets/lcGame/scripts/items/map/assets/lcGame/scripts/items/map/lc_game_map.js"],"names":["window","lc","Map","cc","Class","extends","ItemBase","properties","showNode","Node","boundNode","rightTop","rightBottom","leftBottom","leftTop","top","right","bottom","left","rightTopIn","rightBottomIn","leftBottomIn","leftTopIn","leftTopGap","rightTopGap","rightBottomGap","leftBottomGap","_mapList","ctor","_itemType","GameType","ItemType","onLoad","_super","initMapList","MapType","RightTop","RightBottom","LeftBottom","LeftTop","Top","Right","Bottom","Left","RightTopIn","RightBottomIn","LeftBottomIn","LeftTopIn","LeftTopGap","RightTopGap","RightBottomGap","LeftBottomGap","onMapOpen","active","setIsActive","isMapOpen","onClickMap","trigger","Event","Edit","ChooseMap","x","logicX","y","logicY","onShowMapBound","type","node","getShowMapBound","array","key","push","setMap","info","isOpen","setBound","map","bounds","forEach","value","_showBoundActive"],"mappings":"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","file":"lc_game_map.js","sourceRoot":"../../../../../../../assets/lcGame/scripts/items/map","sourcesContent":["/**\n * 游戏元素：地图父类\n */\nwindow.lc = window.lc || {};\n\nlc.Map = cc.Class({\n    extends: lc.ItemBase,\n\n    properties: {\n        showNode: cc.Node, // 是否显示的节点\n        boundNode: cc.Node, // 边界节点\n\n        // 包围边框\n        rightTop: cc.Node, // 右上角\n        rightBottom: cc.Node, // 右下角\n        leftBottom: cc.Node, // 左下角\n        leftTop: cc.Node, // 左上角\n\n        // 正常边框\n        top: cc.Node, // 上\n        right: cc.Node, // 右\n        bottom: cc.Node, // 下\n        left: cc.Node, // 左\n\n        // 内嵌边框\n        rightTopIn: cc.Node, // 右上\n        rightBottomIn: cc.Node, // 右下\n        leftBottomIn: cc.Node, // 左下\n        leftTopIn: cc.Node, // 左上\n\n        // 内部线条\n        leftTopGap: cc.Node, // 左上\n        rightTopGap: cc.Node, // 右上\n        rightBottomGap: cc.Node, // 右下\n        leftBottomGap: cc.Node, // 左下\n\n        _mapList: null, // 地图边框列表\n\n    },\n\n    ctor () {\n        this._itemType = lc.GameType.ItemType.Map;\n    },\n\n    onLoad () {\n        this._super();\n        this.initMapList();\n    },\n\n    /**\n     * 初始化地图列表\n     */\n    initMapList () {\n        this._mapList = {};\n        this._mapList[lc.GameType.MapType.RightTop] = this.rightTop;\n        this._mapList[lc.GameType.MapType.RightBottom] = this.rightBottom;\n        this._mapList[lc.GameType.MapType.LeftBottom] = this.leftBottom;\n        this._mapList[lc.GameType.MapType.LeftTop] = this.leftTop;\n\n        this._mapList[lc.GameType.MapType.Top] = this.top;\n        this._mapList[lc.GameType.MapType.Right] = this.right;\n        this._mapList[lc.GameType.MapType.Bottom] = this.bottom;\n        this._mapList[lc.GameType.MapType.Left] = this.left;\n\n        this._mapList[lc.GameType.MapType.RightTopIn] = this.rightTopIn;\n        this._mapList[lc.GameType.MapType.RightBottomIn] = this.rightBottomIn;\n        this._mapList[lc.GameType.MapType.LeftBottomIn] = this.leftBottomIn;\n        this._mapList[lc.GameType.MapType.LeftTopIn] = this.leftTopIn;\n\n        this._mapList[lc.GameType.MapType.LeftTopGap] = this.leftTopGap;\n        this._mapList[lc.GameType.MapType.RightTopGap] = this.rightTopGap;\n        this._mapList[lc.GameType.MapType.RightBottomGap] = this.rightBottomGap;\n        this._mapList[lc.GameType.MapType.LeftBottomGap] = this.leftBottomGap;\n\n    },\n\n    /**\n     * 地图是否显示\n     */\n    onMapOpen (active) {\n        this.setIsActive(active);\n    },\n\n    /**\n     * 是否地图打开了\n     * @returns {*}\n     */\n    isMapOpen () {\n      return this.showNode.active;\n    },\n\n    /**\n     * 点击地图块\n     */\n    onClickMap () {\n        this.trigger(lc.Event.Edit.ChooseMap, {x: this.logicX, y: this.logicY});\n\n    },\n\n    /**\n     * 开启边框\n     */\n    onShowMapBound (type) {\n        let node = this._mapList[type];\n        if(node) {\n            node.active = !node.active;\n        }\n    },\n\n    /**\n     * 显示开启的边框\n     */\n    getShowMapBound () {\n        let array = [];\n        for (let key in this._mapList) {\n            if (this._mapList[key] && this._mapList[key].active) {\n                array.push(key);\n            }\n        }\n\n        return array;\n    },\n\n    /**\n     * 设置地图边框\n     * @param array\n     */\n    setMap (info) {\n        this.setIsActive(info.isOpen);\n        this.setBound(info.map.type);\n    },\n\n    /**\n     * 设置边框\n     * @param bounds\n     */\n    setBound (bounds) {\n        bounds.forEach((value) => {\n            this._showBoundActive(value);\n        });\n    },\n\n    /**\n     *\n     * @param type\n     * @private\n     */\n    _showBoundActive (type) {\n        let node = this._mapList[type];\n        if(node) {\n            node.active = true;\n        }\n    },\n\n    /**\n     * 设置是否可见\n     * @param active\n     */\n    setIsActive (active) {\n        this.showNode.active = active;\n    },\n\n\n\n});\n"]}